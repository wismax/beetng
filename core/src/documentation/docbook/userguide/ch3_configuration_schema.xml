<!-- 
	XML Schema Documentation auto-generated by xsd2docbook.xsl with parameters
	
		namespacePrefix = bt:
		rootElement     = section
		rootElementId	= config_schema
		sectionPrefix   = elt_
-->
<section id="config_schema">
   <title>XML Schema Documentation for http://www.mantis-tgi.com/schema/bt/1.1</title>
   <para>Import this schema into your Spring beans definition file (namespace http://www.springframework.org/schema/beans) to configure behavior tracking.</para>
   <section id="elt_config">
      <title id="elt_config_title">&lt;bt:config&gt;</title>
      <para>Container for behavior tracking elements in a Spring configuration file. <xref linkend="elt_config" endterm="elt_config_title" /> is "syntactic sugar" within a Spring bean configuration file and is entirely optional; you can include any of its allowed child elements directly in the file instead.</para>
      <para>Typically a <xref linkend="elt_config" endterm="elt_config_title" /> element will contain one or more <xref linkend="elt_manager" endterm="elt_manager_title" /> elements. Most applications will only need one <xref linkend="elt_manager" endterm="elt_manager_title" /> definition. Other elements like <xref linkend="elt_xml_persister" endterm="elt_xml_persister_title" /> and <xref linkend="elt_session_context" endterm="elt_session_context_title" /> will usually appear as children of a <xref linkend="elt_manager" endterm="elt_manager_title" /> element. It is useful to include them directly under <xref linkend="elt_config" endterm="elt_config_title" /> when you want to make them public for injection into application beans that are not part of the behavior tracking framework, or if you have multiple <xref linkend="elt_manager" endterm="elt_manager_title" /> tags that share a persister, and so on.</para>
      <variablelist>
         <title>&lt;bt:config&gt; Nested Elements</title>
         <varlistentry>
            <term>
               <xref linkend="elt_manager" endterm="elt_manager_title"/>
            </term>
            <listitem>
               <para/>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>
               <xref linkend="elt_session_context" endterm="elt_session_context_title"/>
            </term>
            <listitem>
               <para/>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>
               <xref linkend="elt_persister_chain" endterm="elt_persister_chain_title"/>
            </term>
            <listitem>
               <para/>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>
               <xref linkend="elt_xml_persister" endterm="elt_xml_persister_title"/>
            </term>
            <listitem>
               <para/>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>
               <xref linkend="elt_jdbc_persister" endterm="elt_jdbc_persister_title"/>
            </term>
            <listitem>
               <para/>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>
               <xref linkend="elt_mbean_persister" endterm="elt_mbean_persister_title"/>
            </term>
            <listitem>
               <para/>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>
               <xref linkend="elt_custom_persister" endterm="elt_custom_persister_title"/>
            </term>
            <listitem>
               <para/>
            </listitem>
         </varlistentry>
      </variablelist>
   </section>
   <section id="elt_manager">
      <title id="elt_manager_title">&lt;bt:manager&gt;</title>
      <emphasis role="bold">Java Bean Type:</emphasis>
      <ulink url="../../api/com/mtgi/analytics/BehaviorTrackingManager.html">com.mtgi.analytics.BehaviorTrackingManager</ulink>
      <para>This is the fundamental element required to enable behavior tracking in an application: method call tracking, HTTP request tracking, and JDBC tracking all require this element to appear in Spring configuration.</para>
      <para>If no "id" attribute is specified, the implicit name "defaultTrackingManager" is assumed. If there is more than one <xref linkend="elt_manager" endterm="elt_manager_title" /> defined, you must define a unique "id" value for each.</para>
      <segmentedlist><?dbhtml list-presentation="table"?><title>&lt;bt:manager&gt; Attributes</title>
         <segtitle>Attribute</segtitle>
         <segtitle>Use</segtitle>
         <segtitle>Description</segtitle>
         <seglistitem>
            <seg>application</seg>
            <seg>
               <emphasis role="bold">required</emphasis>
            </seg>
            <seg>
               <para>Arbitrary text string recorded as the "application" attribute of each logged event.</para>
            </seg>
         </seglistitem>
         <seglistitem>
            <seg>flush-threshold</seg>
            <seg>optional</seg>
            <seg>
               <para>Maximum number of events recorded before data is automatically flushed to the persister. Default is 100 if unspecified.</para>
            </seg>
         </seglistitem>
         <seglistitem>
            <seg>task-executor</seg>
            <seg>optional</seg>
            <seg>
               <para>Bean name of a task executor for performing event logging operations. If unspecified, a private thread pool is maintained for this purpose. The default behavior is strongly recommended, as unbounded memory growth is possible if events cannot be logged in a timely fashion as they are recorded.</para>
            </seg>
         </seglistitem>
         <seglistitem>
            <seg>track-method-expression</seg>
            <seg>optional</seg>
            <seg>
               <para>An AspectJ AOP pointcut expression identifying methods that should generate behavior tracking events. This is a simplified alternative to using <xref linkend="elt_advice" endterm="elt_advice_title" /> in combination with standard Spring AOP configuration.</para>
            </seg>
         </seglistitem>
         <seglistitem>
            <seg>flush-schedule</seg>
            <seg>optional</seg>
            <seg>
               <para>Quartz Cron expression describing how often events should be flushed to the persister. Default is every 5 minutes if unspecified.</para>
            </seg>
         </seglistitem>
         <seglistitem>
            <seg>register-mbeans</seg>
            <seg>optional</seg>
            <seg>
               <para>Boolean expression indicating whether JMX mbeans for this manager should be registered with the platform MBean Server. Defaults to false if unspecified.</para>
            </seg>
         </seglistitem>
         <seglistitem>
            <seg>scheduler</seg>
            <seg>optional</seg>
            <seg>
               <para>Bean name of a Quartz scheduler bean to use for timed flush operations. If unspecified, a private instance will be created. The default behavior is strongly recommended.</para>
            </seg>
         </seglistitem>
         <seglistitem>
            <seg>persister</seg>
            <seg>optional</seg>
            <seg>
               <para>Bean name of a BehaviorEventPersister implementation defined in the applicaton context. Use in place of a nested persister element (e.g. <xref linkend="elt_xml_persister" endterm="elt_xml_persister_title" />, <xref linkend="elt_jdbc_persister" endterm="elt_jdbc_persister_title" />).</para>
            </seg>
         </seglistitem>
         <seglistitem>
            <seg>session-context</seg>
            <seg>optional</seg>
            <seg>
               <para>Bean name of a SessionContext implementation defined in the applicaton context. Use in place of a nested <xref linkend="elt_session_context" endterm="elt_session_context_title" /> element.</para>
            </seg>
         </seglistitem>
      </segmentedlist>
      <variablelist>
         <title>&lt;bt:manager&gt; Nested Elements</title>
         <varlistentry>
            <term>
               <xref linkend="elt_persister_chain" endterm="elt_persister_chain_title"/>
            </term>
            <listitem>
               <para>Configure a multiple persisters for this manager.</para>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>
               <xref linkend="elt_xml_persister" endterm="elt_xml_persister_title"/>
            </term>
            <listitem>
               <para>Configure XML logging for this manager. This is the default logging type if none is specified, so this is only necessary if you want to change any of the defaults, e.g. specify log file location or change the log rotation schedule.</para>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>
               <xref linkend="elt_jdbc_persister" endterm="elt_jdbc_persister_title"/>
            </term>
            <listitem>
               <para>Configure JDBC logging for this manager.</para>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>
               <xref linkend="elt_mbean_persister" endterm="elt_mbean_persister_title"/>
            </term>
            <listitem>
               <para>Configure JMX monitoring for this manager. Event statistics are aggregated in MBeans, where they can be viewed from a JMX console for monitoring quality-of-service.</para>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>
               <xref linkend="elt_custom_persister" endterm="elt_custom_persister_title"/>
            </term>
            <listitem>
               <para>Configure a custom BehaviorEventPersister implementation for this manager.</para>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>
               <xref linkend="elt_session_context" endterm="elt_session_context_title"/>
            </term>
            <listitem>
               <para>Specify the bean name of a SessionContext implementation to use with this BehaviorTrackingManager. An alternative to a nested <xref linkend="elt_session_context" endterm="elt_session_context_title" /> element.</para>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>
               <xref linkend="elt_http_requests" endterm="elt_http_requests_title"/>
            </term>
            <listitem>
               <para>Activate logging of http requests using this manager. Use of this element requires a servlet container supporting JSP 2.0 and higher. Older containers MUST use the servlet filter instead.</para>
               <para>All parameters are logged unless the "parameters" attribute is specified. Similarly, all requests are logged, unless one or more "uri-patterns" are specified.</para>
               <para>This element cannot be used in a web application that already has BehaviorTrackingFilter instance(s) configured in web.xml. BehaviorTrackingFilters are a more complex, but slightly more powerful alternative to configuration using this element. For example, BehaviorTrackingFilters add HTTP response code and error diagnostic information to the behavior tracking event. HTTP response codes are not logged if you use <xref linkend="elt_http_requests" endterm="elt_http_requests_title" /> in your Spring configuration.</para>
               <para>However, the relatively more concise <xref linkend="elt_http_requests" endterm="elt_http_requests_title" /> tag in spring configuration may suffice in simple applications, with the added benefit of centralizing all behavior tracking configuration in your Spring bean definitions file.</para>
            </listitem>
         </varlistentry>
      </variablelist>
      <section id="elt_http_requests">
         <title id="elt_http_requests_title">&lt;bt:http-requests&gt;</title>
         <para>Activate logging of http requests using this manager. Use of this element requires a servlet container supporting JSP 2.0 and higher. Older containers MUST use the servlet filter instead.</para>
         <para>All parameters are logged unless the "parameters" attribute is specified. Similarly, all requests are logged, unless one or more "uri-patterns" are specified.</para>
         <para>This element cannot be used in a web application that already has BehaviorTrackingFilter instance(s) configured in web.xml. BehaviorTrackingFilters are a more complex, but slightly more powerful alternative to configuration using this element. For example, BehaviorTrackingFilters add HTTP response code and error diagnostic information to the behavior tracking event. HTTP response codes are not logged if you use <xref linkend="elt_http_requests" endterm="elt_http_requests_title" /> in your Spring configuration.</para>
         <para>However, the relatively more concise <xref linkend="elt_http_requests" endterm="elt_http_requests_title" /> tag in spring configuration may suffice in simple applications, with the added benefit of centralizing all behavior tracking configuration in your Spring bean definitions file.</para>
         <segmentedlist><?dbhtml list-presentation="table"?><title>&lt;bt:http-requests&gt; Attributes</title>
            <segtitle>Attribute</segtitle>
            <segtitle>Use</segtitle>
            <segtitle>Description</segtitle>
            <seglistitem>
               <seg>parameters</seg>
               <seg>optional</seg>
               <seg>
                  <para>If specified, a comma-separated list of request parameters that should be logged with behavior events. If unspecified, all parameters are logged.</para>
               </seg>
            </seglistitem>
            <seglistitem>
               <seg>name-parameters</seg>
               <seg>optional</seg>
               <seg>
                  <para>If specified, a comma-separated list of request parameters that should be included as part of the event name. This is useful if you want to differentiate events by key parameter values, rather than by URL alone. If unspecified, no parameters are included in the event name.</para>
               </seg>
            </seglistitem>
            <seglistitem>
               <seg>uri-pattern</seg>
               <seg>optional</seg>
               <seg>
                  <para>Equivalent to a single nested uri-pattern element, provided as an attribute for syntactic convenience.</para>
               </seg>
            </seglistitem>
            <seglistitem>
               <seg>event-type</seg>
               <seg>optional</seg>
               <seg>
                  <para>The value to log for event type when recording http requests. Defaults to "http-request" if unspecified.</para>
               </seg>
            </seglistitem>
         </segmentedlist>
         <variablelist>
            <title>&lt;bt:http-requests&gt; Nested Elements</title>
            <varlistentry>
               <term>
                  <xref linkend="elt_uri_pattern" endterm="elt_uri_pattern_title"/>
               </term>
               <listitem>
                  <para>A regular expression identifying URIs that should be logged to the behavior event persister. The value of HttpServletRequest.getServletURI() will be matched against this expression.</para>
                  <para>This element has equivalent behavior to the uri-pattern attribute, but can appear multiple time.</para>
               </listitem>
            </varlistentry>
         </variablelist>
         <section id="elt_uri_pattern">
            <title id="elt_uri_pattern_title">&lt;bt:uri-pattern&gt;</title>
            <para>A regular expression identifying URIs that should be logged to the behavior event persister. The value of HttpServletRequest.getServletURI() will be matched against this expression.</para>
            <para>This element has equivalent behavior to the uri-pattern attribute, but can appear multiple time.</para>
         </section>
      </section>
   </section>
   <section id="elt_advice">
      <title id="elt_advice_title">&lt;bt:advice&gt;</title>
      <emphasis role="bold">Java Bean Type:</emphasis>
      <ulink url="../../api/com/mtgi/analytics/aop/BehaviorTrackingAdvice.html">com.mtgi.analytics.aop.BehaviorTrackingAdvice</ulink>
      <para>Defines an AOP advisor that logs a behavior tracking event for each advised method call. Generally you can use the track-method-expression attribute of <xref linkend="elt_manager" endterm="elt_manager_title" /> to achieve the same result; <xref linkend="elt_advice" endterm="elt_advice_title" /> tags are not strictly necessary. <xref linkend="elt_advice" endterm="elt_advice_title" /> is provided for fine-grained integration of behavior tracking with other AOP advice. For example, you can control whether behavior tracking events occur inside or outside of transaction boundaries.</para>
      <segmentedlist><?dbhtml list-presentation="table"?><title>&lt;bt:advice&gt; Attributes</title>
         <segtitle>Attribute</segtitle>
         <segtitle>Use</segtitle>
         <segtitle>Description</segtitle>
         <seglistitem>
            <seg>tracking-manager</seg>
            <seg>optional</seg>
            <seg>
               <emphasis role="bold">Java Bean Type:</emphasis>
               <ulink url="../../api/com/mtgi/analytics/BehaviorTrackingManager.html">com.mtgi.analytics.BehaviorTrackingManager</ulink>
               <para>The bean name of the BehaviorTrackingManager instance that is to be used to register events.</para>
               <para>This attribute is usually optional, only required if there is more than one <xref linkend="elt_manager" endterm="elt_manager_title" /> defined by the application.</para>
            </seg>
         </seglistitem>
      </segmentedlist>
   </section>
   <section id="elt_persister_chain">
      <title id="elt_persister_chain_title">&lt;bt:persister-chain&gt;</title>
      <emphasis role="bold">Java Bean Type:</emphasis>
      <ulink url="../../api/com/mtgi/analytics/ChainingEventPersisterImpl.html">com.mtgi.analytics.ChainingEventPersisterImpl</ulink>
      <para>A delegating BehaviorEventPersister that sends events to a list of persisters. For example, you can configure both an mbean-persister for JMX statistics monitoring and an xml-persister to store raw data. Normally this element will occur as a child of <xref linkend="elt_manager" endterm="elt_manager_title" />.</para>
      <variablelist>
         <title>&lt;bt:persister-chain&gt; Nested Elements</title>
         <varlistentry>
            <term>
               <xref linkend="elt_xml_persister" endterm="elt_xml_persister_title"/>
            </term>
            <listitem>
               <para>Add an XML logging persister to the chain.</para>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>
               <xref linkend="elt_jdbc_persister" endterm="elt_jdbc_persister_title"/>
            </term>
            <listitem>
               <para>Add a JDBC logging persister to the chain.</para>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>
               <xref linkend="elt_mbean_persister" endterm="elt_mbean_persister_title"/>
            </term>
            <listitem>
               <para>Add a JMX monitoring persister to the chain.</para>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>
               <xref linkend="elt_custom_persister" endterm="elt_custom_persister_title"/>
            </term>
            <listitem>
               <para>Add a custom BehaviorEventPersister implementation to the chain.</para>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>beans:ref</term>
            <listitem>
               <para>Add a reference by name to a persister bean defined elsewhere in the Spring configuration.</para>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>beans:idref</term>
            <listitem>
               <para>Add a reference by ID to a persister bean defined elsewhere in the Spring configuration.</para>
            </listitem>
         </varlistentry>
      </variablelist>
   </section>
   <section id="elt_xml_persister">
      <title id="elt_xml_persister_title">&lt;bt:xml-persister&gt;</title>
      <emphasis role="bold">Java Bean Type:</emphasis>
      <ulink url="../../api/com/mtgi/analytics/XmlBehaviorEventPersisterImpl.html">com.mtgi.analytics.XmlBehaviorEventPersisterImpl</ulink>
      <para>Defines behavior tracking event persistence to a rotating XML log file. Support is provided for binary XML and GZIP compression. Generally this element will appear as a child of <xref linkend="elt_manager" endterm="elt_manager_title" /> without an "id", though it is possible to declare it as a top-level bean if you want to inject it into other application beans.</para>
      <segmentedlist><?dbhtml list-presentation="table"?><title>&lt;bt:xml-persister&gt; Attributes</title>
         <segtitle>Attribute</segtitle>
         <segtitle>Use</segtitle>
         <segtitle>Description</segtitle>
         <seglistitem>
            <seg>file</seg>
            <seg>optional</seg>
            <seg>
               <para>Path to XML log file. Defaults to behavior-tracking.xml in the process working directory.</para>
            </seg>
         </seglistitem>
         <seglistitem>
            <seg>rotate-schedule</seg>
            <seg>optional</seg>
            <seg>
               <para>Quartz Cron expression for the log file rotation schedule. Defaults to daily at midnight if unspecified.</para>
            </seg>
         </seglistitem>
         <seglistitem>
            <seg>binary</seg>
            <seg>optional</seg>
            <seg>
               <para>Enable binary (FastInfoset) XML logging. Defaults to true.</para>
            </seg>
         </seglistitem>
         <seglistitem>
            <seg>compress</seg>
            <seg>optional</seg>
            <seg>
               <para>Enable GZIP logfile compression. Defaults to true.</para>
            </seg>
         </seglistitem>
      </segmentedlist>
   </section>
   <section id="elt_jdbc_persister">
      <title id="elt_jdbc_persister_title">&lt;bt:jdbc-persister&gt;</title>
      <emphasis role="bold">Java Bean Type:</emphasis>
      <ulink url="../../api/com/mtgi/analytics/JdbcBehaviorEventPersisterImpl.html">com.mtgi.analytics.JdbcBehaviorEventPersisterImpl</ulink>
      <para>Defines behavior tracking event persistence to a JDBC DataSource. Optional support is provided for JDBC batch fetching. Generally this element will appear as a child of <xref linkend="elt_manager" endterm="elt_manager_title" /> without an "id", though it is possible to declare it as a top-level bean if you want to inject it into other application beans.</para>
      <segmentedlist><?dbhtml list-presentation="table"?><title>&lt;bt:jdbc-persister&gt; Attributes</title>
         <segtitle>Attribute</segtitle>
         <segtitle>Use</segtitle>
         <segtitle>Description</segtitle>
         <seglistitem>
            <seg>batch-size</seg>
            <seg>optional</seg>
            <seg>
               <para>Statement batch size for persistence operations, only used if underlying JDBC driver supports batching. Default is 25.</para>
            </seg>
         </seglistitem>
      </segmentedlist>
      <variablelist>
         <title>&lt;bt:jdbc-persister&gt; Nested Elements</title>
         <varlistentry>
            <term>
               <xref linkend="elt_data_source" endterm="elt_data_source_title"/>
            </term>
            <listitem>
               <para>Specifies the data source to which events are persisted.</para>
            </listitem>
         </varlistentry>
         <varlistentry>
            <term>
               <xref linkend="elt_id_sql" endterm="elt_id_sql_title"/>
            </term>
            <listitem>
               <para>Overrides the default SQL statement used to retrieve new event IDs.</para>
            </listitem>
         </varlistentry>
      </variablelist>
      <section id="elt_data_source">
         <title id="elt_data_source_title">&lt;bt:data-source&gt;</title>
         <para>Specifies the data source to which events are persisted.</para>
         <segmentedlist><?dbhtml list-presentation="table"?><title>&lt;bt:data-source&gt; Attributes</title>
            <segtitle>Attribute</segtitle>
            <segtitle>Use</segtitle>
            <segtitle>Description</segtitle>
            <seglistitem>
               <seg>ref</seg>
               <seg>optional</seg>
               <seg/>
            </seglistitem>
         </segmentedlist>
         <variablelist>
            <title>&lt;bt:data-source&gt; Nested Elements</title>
            <varlistentry>
               <term>beans:ref</term>
               <listitem>
                  <para/>
               </listitem>
            </varlistentry>
            <varlistentry>
               <term>beans:idref</term>
               <listitem>
                  <para/>
               </listitem>
            </varlistentry>
         </variablelist>
      </section>
      <section id="elt_id_sql">
         <title id="elt_id_sql_title">&lt;bt:id-sql&gt;</title>
         <para>Overrides the default SQL statement used to retrieve new event IDs.</para>
      </section>
   </section>
   <section id="elt_mbean_persister">
      <title id="elt_mbean_persister_title">&lt;bt:mbean-persister&gt;</title>
      <emphasis role="bold">Java Bean Type:</emphasis>
      <ulink url="../../api/com/mtgi/analytics/jmx/StatisticsMBeanEventPersisterImpl.html">com.mtgi.analytics.jmx.StatisticsMBeanEventPersisterImpl</ulink>
      <para>Stores aggregate event statistics in memory, for access from a JMX console. Generally this element will appear as a child of <xref linkend="elt_manager" endterm="elt_manager_title" /> without an "id", though it is possible to declare it as a top-level bean if you want to inject it into other application beans.</para>
   </section>
   <section id="elt_custom_persister">
      <title id="elt_custom_persister_title">&lt;bt:custom-persister&gt;</title>
      <emphasis role="bold">Java Bean Type:</emphasis>
      <ulink url="../../api/com/mtgi/analytics/BehaviorEventPersister.html">com.mtgi.analytics.BehaviorEventPersister</ulink>
      <para>Defines a custom com.mtgi.analytics.BehaviorEventPersister implementation. Generally this element will appear as a child of <xref linkend="elt_manager" endterm="elt_manager_title" /> without an "id", though it is possible to declare it as a top-level bean if you want to inject it into other application beans.</para>
   </section>
   <section id="elt_session_context">
      <title id="elt_session_context_title">&lt;bt:session-context&gt;</title>
      <emphasis role="bold">Java Bean Type:</emphasis>
      <ulink url="../../api/com/mtgi/analytics/SessionContext.html">com.mtgi.analytics.SessionContext</ulink>
      <para>Specifies a custom SessionContext implementation, which provides the user ID and session ID for logged events. If no session-context is specified, then com.mtgi.analytics.servlet.SpringSessionContext is used if we are determined to be in a Spring web application; otherwise com.mtgi.analytics.JAASSessionContext is used.</para>
      <para>This element has the syntax of a standard Spring bean definition; e.g. specify "id" and "class" attributes, as well as nested &lt;property&gt; elements.</para>
   </section>
   <section id="elt_tracking_manager">
      <title id="elt_tracking_manager_title">Attribute bt:tracking-manager</title>
      <emphasis role="bold">Java Bean Type:</emphasis>
      <ulink url="../../api/com/mtgi/analytics/sql/BehaviorTrackingDataSource.html">com.mtgi.analytics.sql.BehaviorTrackingDataSource</ulink>
      <para>Annotates a Spring bean definition for behavior tracking. The value of this attribute should be the ID of the <xref linkend="elt_manager" endterm="elt_manager_title" /> instance to use, or simply "defaultTrackingManager". Currently this attribute is only supported for DataSource bean definitions.</para>
   </section>
</section>