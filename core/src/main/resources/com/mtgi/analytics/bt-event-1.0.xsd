<?xml version="1.0" encoding="UTF-8" standalone="no"?>

<xsd:schema xmlns="http://www.mantis-tgi.com/schema/bt"
			xmlns:xsd="http://www.w3.org/2001/XMLSchema"
			xmlns:bt="http://www.mantis-tgi.com/schema/bt/event"
			targetNamespace="http://www.mantis-tgi.com/schema/bt/event"
			elementFormDefault="qualified"
			attributeFormDefault="unqualified">

	<xsd:annotation>
		<xsd:documentation>The behavior tracking event schema produced by the XML event persister.</xsd:documentation>
	</xsd:annotation>

	<xsd:element name="event-log">
		<xsd:annotation>
			<xsd:documentation>Document element for a log of behavior tracking events.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="bt:event" maxOccurs="unbounded" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="event">
		<xsd:complexType>
			<xsd:annotation>
				<xsd:documentation>Data related to a single behavior tracking event.</xsd:documentation>
			</xsd:annotation>
			
			<xsd:sequence>
				<xsd:element name="type" type="xsd:string">
					<xsd:annotation>
						<xsd:documentation>The type of event.  Within a single application, all events
						of the same type should share a common structure for event name and event data.
						For example, events of type "http-request" should present a URI for "name"
						and might contain parameter and protocol data in "event-data".
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				
				<xsd:element name="name" type="xsd:string">
					<xsd:annotation>
						<xsd:documentation>The name of the event.  The name represents the action taken
						by the user or the system on the user's behalf.  For example, a request URI or
						method name.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				
				<xsd:element name="application" type="xsd:string">
					<xsd:annotation>
						<xsd:documentation>The name of the application in which the event occurred.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				
				<xsd:element name="start" type="xsd:dateTime">
					<xsd:annotation>
						<xsd:documentation>The date and time at which the event started.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				
				<xsd:element name="duration-ns" type="xsd:long">
					<xsd:annotation>
						<xsd:documentation>The event duration, in nanoseconds.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				
				<xsd:element name="user-id" type="xsd:string" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>If the event was performed by an authenticated user, a unique
						identifier for that user (such as login name).  Missing if the event was not performed
						in an authenticated context.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				
				<xsd:element name="session-id" type="xsd:string" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Session identifier (e.g. HTTP session ID for web applications)
						in which the event was performed.  Missing if the application does not have
						a concept of session.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				
				<xsd:element name="error" type="xsd:string" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>If the event did not complete normally, logs a concise error
						message here.  This is not intended to be an exhaustive logging of the error, but
						provides some context for aligning event logs with other application logs.  For example,
						an indication of HTTP 500 or a Java Exception message could be logged here.
						Missing if the event ended normally.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				
				<xsd:element name="event-data" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Freely structured supplemental information about the event.  For
						example, method parameters, HTTP parameters, SQL text, and so on.  The exact structure
						of event-data will vary by application and by event type.</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:any minOccurs="0" maxOccurs="unbounded" namespace="##any" processContents="lax"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				
			</xsd:sequence>
			
			<xsd:attribute name="id" type="xsd:string" use="required">
				<xsd:annotation>
					<xsd:documentation>UUID uniquely identifying this event.</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			
			<xsd:attribute name="parent-id" type="xsd:string" use="optional">
				<xsd:annotation>
					<xsd:documentation>If this is a child event, the id value of the parent event.</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			
		</xsd:complexType>
	</xsd:element>
			
</xsd:schema>