-- event data table for basic analysis
create table BEHAVIOR_TRACKING_EVENT (
	EVENT_ID		VARCHAR(100)	NOT NULL,
	PARENT_EVENT_ID	VARCHAR(100),
	EVENT_TYPE		VARCHAR(20)	NOT NULL,
	EVENT_NAME		VARCHAR(256)	NOT NULL,
	EVENT_START		DATE			NOT NULL,
	USER_ID			VARCHAR(64),
	SESSION_ID		VARCHAR(64),
	APPLICATION		VARCHAR(64)	NOT NULL,
	DURATION_NS		BIGINT		NOT NULL,
	EVENT_DATA		VARCHAR(4000),
	ERROR			VARCHAR(512),
	SUMMARIZED		CHAR(1)
);
create index EVENT_NAME_IDX on BEHAVIOR_TRACKING_EVENT (
   EVENT_NAME ASC
);

-- event summary table for trending over long periods of time
create table BEHAVIOR_TRACKING_SUMMARY (
	SUMMARY_DATE		VARCHAR(100)	NOT NULL,
	EVENT_TYPE			VARCHAR(20)	NOT NULL,
	EVENT_NAME			VARCHAR(256)	NOT NULL,
	PERIOD_START		DATE			NOT NULL,
	PERIOD_END			DATE			NOT NULL,
	COUNT				BIGINT		NOT NULL,
	AVERAGE_NS			BIGINT		NOT NULL,
	MINIMUM_NS			BIGINT		NOT NULL,
	MAXIMUM_NS			BIGINT		NOT NULL,
	MEDIAN_NS			BIGINT		NOT NULL,
	STANDARD_DEVIATION	BIGINT		NOT NULL,
	ERROR_COUNT			BIGINT		NOT NULL
);

-- MEDIAN, taken from Scott Bailey 'Artacus'
CREATE OR REPLACE FUNCTION _final_median(numeric[])
   RETURNS numeric AS
$$
   SELECT AVG(val)
   FROM (
     SELECT val
     FROM unnest($1) val
     ORDER BY 1
     LIMIT  2 - MOD(array_upper($1, 1), 2)
     OFFSET CEIL(array_upper($1, 1) / 2.0) - 1
   ) sub;
$$
LANGUAGE 'sql' IMMUTABLE;
 
CREATE AGGREGATE median(numeric) (
  SFUNC=array_append,
  STYPE=numeric[],
  FINALFUNC=_final_median,
  INITCOND='{}'
);
