<?xml version="1.0"?>

<project name="beet" default="all"
		 xmlns:ivy="antlib:org.apache.ivy.ant">

	<fileset id="licenses" dir="${basedir}">
		<include name="notice.txt"/>
		<include name="changelog.txt"/>
		<include name="licenses/*.txt"/>
	</fileset>
	
	<property name="local.properties" value="local.properties"/>
	<property file="${local.properties}"/>

	<property name="scripts.dir" value="${basedir}/src/build/ant"/>
	<import file="${scripts.dir}/build-master.xml"/>

	<macrodef name="bundle" 
			  description="Generate tar.gz, tar.bz2, zip, and corresponding MD5 hash files for a release directory">

		<attribute name="basename" description="Base name for the generated archives, without extensions"/>
		<attribute name="prefix" description="Root directory name of contents placed in the archive"/>
		<attribute name="dir" description="Base directory for files to include" />
		<attribute name="includes" description="Include patterns relative to 'dir'" default=""/>
		<attribute name="excludes" description="Exclude patterns relative to 'dir'" default=""/>
		<element name="contents" description="nested include, exclude, or pattern directives" implicit="true" optional="true"/>

		<sequential>

			<zip file="@{basename}.zip">
				<zipfileset prefix="@{prefix}" dir="@{dir}" includes="@{includes}" excludes="@{excludes}">
					<contents/>
				</zipfileset>
			</zip>
			<checksum file="@{basename}.zip"/>
			
			<tar destfile="@{basename}.tar.gz" compression="gzip">
				<tarfileset prefix="@{prefix}" dir="@{dir}" includes="@{includes}" excludes="@{excludes}">
					<contents/>
				</tarfileset>
			</tar>
			<checksum file="@{basename}.tar.gz"/>

			<tar destfile="@{basename}.tar.bz2" compression="bzip2">
				<tarfileset prefix="@{prefix}" dir="@{dir}" includes="@{includes}" excludes="@{excludes}">
					<contents/>
				</tarfileset>
			</tar>
			<checksum file="@{basename}.tar.bz2"/>
			
		</sequential>
		
	</macrodef>
	
	<target name="all-dist" depends="all,release"/>
	
	<!-- replace standard package target with custom routines -->
	<target name="package" depends="doc,package-release,package-utils,package-reports"/>

	<target name="package-utils" description="package command line utilities">

		<ivy:resolve file="utils/ivy.xml" resolveId="mtgi-beet-utils" />

		<!-- create separate distributions for java 5 and 6 -->
		<for list="5,6" param="current.version">
			<sequential>
				<var name="utils.dist" value="${target.dir}/java@{current.version}/utils"/>
				<mkdir dir="${utils.dist}"/>

				<ivy:retrieve useOrigin="true"
			                  pattern="${utils.dist}/lib/[artifact]-[revision].[ext]"
							  conf="1.@{current.version}"/>

				<copy todir="${utils.dist}">
					<fileset dir="${build.root}/utils/dist/jars"
		                     includes="**/*.jar" excludes="**/*test*"/>
					<fileset dir="utils/src/main/sh" includes="**/**"/>
					<fileset refid="licenses"/>
				</copy>
				<copy todir="${utils.dist}/db">
					<fileset dir="utils/src/main/sql" includes="**/**"/>
				</copy>

				<bundle basename="${target.dir}/beet-utils-java@{current.version}-${ivy.revision.mtgi-beet-utils}"
						prefix="beet-utils-${ivy.revision.mtgi-beet-utils}"
						dir="${utils.dist}" includes="**/*"/>
			</sequential>
		</for>

	</target>

	<target name="package-release" description="package a new public release for upload to SF">
		<ivy:resolve file="core/ivy.xml" resolveId="mtgi-beet"/>

		<!-- create separate distributions for java 5 and 6 -->
		<for list="5,6" param="current.version">
			<sequential>
				<var name="release.dir" value="${target.dir}/java@{current.version}/release"/>
				<mkdir dir="${release.dir}"/>

				<ivy:retrieve useOrigin="true"
			                  pattern="${release.dir}/lib/[artifact]-[revision].[ext]"
							  conf="1.@{current.version}"/>

				<copy todir="${release.dir}">
					<fileset dir="${build.root}/core/dist/jars"
		                     includes="**/*.jar" excludes="**/*test*"/>
					<fileset refid="licenses"/>
					<fileset dir="core/src/main" includes="sql/**"/>
				</copy>
				
				<copy todir="${release.dir}/docs" failonerror="false">
					<fileset dir="${build.root}">
						<include name="core/docs/api/**/*"/>
						<include name="core/docs/userguide/**/*"/>
						<include name="utils/docs/api/**/*"/>
					</fileset>
				</copy>

				<bundle basename="${target.dir}/beet-java@{current.version}-${ivy.revision.mtgi-beet}"
						prefix="beet-${ivy.revision.mtgi-beet}"
						dir="${release.dir}" includes="**/*"/>

			</sequential>
		</for>
	</target>

	<target name="package-reports" description="package build reports and documentation for a project web site update">

		<var name="release.dir" value="${target.dir}/site"/>
		<mkdir dir="${release.dir}"/>

		<tar destfile="${target.dir}/reports.tar.bz2" compression="bzip2">
			<tarfileset prefix="build" dir="${build.root}">
				<include name="core/docs/api/**/*"/>
				<include name="core/docs/userguide/**/*"/>
				<include name="core/reports/**"/>
				<include name="utils/docs/**"/>
				<include name="utils/reports/**"/>
				<include name="test/docs/**"/>
				<include name="test/reports/**"/>
				<include name="integration/*/reports/**"/>
			</tarfileset>
		</tar>
		
	</target>

	<target name="repository" 
			description="build a functioning local Ivy repository containing beet and all of its dependencies, and
						 generate maven artifacts">

		<ivy:resolve file="${scripts.dir}/ivy-tasks.xml"/>
		<ivy:retrieve pattern="${basedir}/repository/ivyrep/[organisation]/[module]/[revision]/[type]s/[artifact].[ext]" 
					  ivypattern="${basedir}/repository/ivyrep/[organisation]/[module]/[revision]/[type]s/[artifact].[ext]"/>

		<ivy:install from="online" to="local" overwrite="true"
					 organisation="net.sourceforge.beet" module="beet" revision="latest.integration"/>
		<ivy:install from="online" to="local"
					 organisation="net.sourceforge.beet" module="beet-utils" revision="latest.integration"
					 overwrite="true"/>
		<ivy:install from="online" to="local"
					 organisation="net.sourceforge.beet" module="beet-test" revision="latest.integration"
					 overwrite="true"/>
		<ivy:install from="online" to="local"
					 organisation="net.sourceforge.beet" module="beet-web" revision="latest.integration"
					 overwrite="true"/>
		<!--<ivy:install from="online" to="local" transitive="true"
					 organisation="net.sourceforge.beet" module="beet-hello" revision="latest.integration"
					 overwrite="true"/> -->
		
	</target>
	
	<target name="maven-repository" description="generate maven packaging artifacts from the local ivy repository" depends="repository">

		<!-- publish ivy descriptors, stripping out test/compile time dependencies -->
		<for list="core,utils,test,integration/web" param="module.dir">
			<sequential>
				<ivy:resolve file="@{module.dir}/ivy.xml"/>
				<ivy:publish resolver="local" conf="source,javadoc,default,1.5,1.6" overwrite="true" update="true">
					<artifacts pattern="build/@{module.dir}/dist/[type]s/[artifact].[ext]"/>
				</ivy:publish>
			</sequential>
		</for>
		
		<!-- load ivy settings that uses maven naming conventions -->
		<ivy:settings id="maven.settings" file="${scripts.dir}/ivysettings-maven.xml"/>
		<for list="beet,beet-utils,beet-test,beet-web" param="module.name">
			<sequential>
				
				<!-- transfer ivy descriptor into maven repository folder, applying name changes -->
				<ivy:findrevision settingsRef="maven.settings" organisation="net.sourceforge.beet" 
								  module="@{module.name}" revision="latest.integration"/>
				<ivy:install settingsRef="maven.settings" from="local-maven-src" to="local-maven-dest" 
							 organisation="net.sourceforge.beet" module="@{module.name}" 
							 revision="${ivy.revision}" overwrite="true"/>

				<!-- generate pom -->
				<var name="maven.artifact.dir" value="repository/maven/net/sourceforge/beet/@{module.name}/${ivy.revision}"/>
				<var name="pom.file" value="${maven.artifact.dir}/@{module.name}-${ivy.revision}.pom"/>
				<ivy:makepom pomfile="${pom.file}" ivyfile="${maven.artifact.dir}/ivy-${ivy.revision}.xml"
							 headerfile="${scripts.dir}/license-header.txt">
					<mapping conf="1.5, 1.6, default" scope="runtime" />
				</ivy:makepom>

				<!-- generate hashes -->
				<checksum file="${pom.file}" todir="${maven.artifact.dir}" algorithm="MD5" fileext=".md5"/>
				<checksum file="${pom.file}" todir="${maven.artifact.dir}" algorithm="SHA" fileext=".sha1"/>

			</sequential>
		</for>
			
	</target>
	
	<target name="release">
		<zip destfile="${target.dir}/release-packages-full.zip">
			<zipfileset prefix="beet-release" dir="${target.dir}">
				<include name="*.gz"/>
				<include name="*.bz2"/>
				<include name="*.zip"/>
				<include name="*.MD5"/>
				<exclude name="reports.tar.bz2"/>
			</zipfileset>
		</zip>
	</target>

</project>